NVT still seems buggy (FIXED) 11/20/13
check NVE working that it conserves energy- that means all the rest of the parts are working.

nate bets that on the first loop setting the accel vel and position on the thermostat on first loop not doing very well (fixed due to velocity rescaling)
11/24/13
OPENMP wasn't working   12/1/13
specifically, when use more than one thread the thermostat doesn't properly work (fixed the thermostat issue)
(fixed, we weren't compiling each function's cpp file with the link to fopenmp which meant compiling that was totally ignoring the pragma statements!
Still no speedup using openmp is it because of this http://stackoverflow.com/questions/7558965/openmp-wont-utilize-all-cores  12/14/13
Need to make sure chunks in omp are logical values....!!! i.e. chunksize shouldn't be 100 when dealing wiht celllists if there are only 27. 12/14/13
Need to figure out HOW TO GET SYSTEM COMPONENTS INTO SHARED LIST IN OPENMP.. i.e. how to get system or atoms into shared lists so can actually speed up. (fixed 12/17/13 use intel compiler :))

shifted lennard-jones potential check form of equations .. blowing up (initializing on grid... but, there is a BUG**Carmeline!**)

Figure out if brute force rebuilding of cell lists is better than linked list maintenance (**George**)

benchmark OMP (reductions?)  (fixed 12/14/13)  (after variable chunksizes george will do this**)
	don't really see a speed up for some reason (fixed 12/14/13) openmp had some serious bugs that were resolved and reductions were added
	PROFILE (-gp)   (**George will do this after OMP**)


test if rebuild is actually faster (rs = 0)  Scaling as a function of Skinsize-> plots (**Carmeline**)
maintain "real" positions for MSD calc (gr done automatically with vmd through snapshots) (**later**)
compare MSD for some LJ fluid with something in literature
add googletests (**Carmeline**) 
Add LJ potential (we did this already-- we started with some dpd potential)

integrator verletStep is for NVE only now, add a class for this (we did this)
change “start” to be local in each class for integrators

Change main so it actually takes inputs (**George**)  T, numprocs, numparticles

Carmeline really long intro about why LJ particles are important 

LaTeX report. Separate directory for this (All of us Carmeline will take lead on this)

GPU
1. offload integration
2. then try offloading force calc (can use CPU cell list to build verlet lists for GPU)
3. We really need to mention how ridiculously busy TIGER is on the GPU queue. Testing takes forever since 
can't run it interactively and so if you submit a job in the morning it takes almost 24 hours to run, and that's until you 
find the next bug..!
4. trhust reduce and copy are where the problems seems to be
	tiger problems with reserving a GPu, version of CUDA matters
Notes:
pbcDist2 much faster than pbcDist (quantify this)
cell lists much better than brute force for > 1000 atoms  (**quantify**)
